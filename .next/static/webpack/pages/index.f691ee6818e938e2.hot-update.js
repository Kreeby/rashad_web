"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./components/EarthGlobe.tsx":
/*!***********************************!*\
  !*** ./components/EarthGlobe.tsx ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EarthGlobe: function() { return /* binding */ EarthGlobe; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n/* harmony import */ var three_examples_jsm_controls_OrbitControls_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! three/examples/jsm/controls/OrbitControls.js */ \"./node_modules/three/examples/jsm/controls/OrbitControls.js\");\n\nvar _s = $RefreshSig$();\n\n\n\nfunction EarthGlobe(param) {\n    let { locations, onLocationHover, hoveredLocation } = param;\n    _s();\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Hold onto our marker meshes so we can ray-cast only them:\n    const markerMeshes = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);\n    const particlesRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const atmosphereRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // ðŸ”§ CHANGED â€” keep these outside animate() so the ray updates every frame\n    const raycaster = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(new three__WEBPACK_IMPORTED_MODULE_2__.Raycaster()).current;\n    const mouse = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(new three__WEBPACK_IMPORTED_MODULE_2__.Vector2(-1000, -1000)).current; // start off-canvas\n    let lastHoveredId = null; // tracks state across frames\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!containerRef.current) return;\n        const width = containerRef.current.clientWidth;\n        const height = containerRef.current.clientHeight;\n        // Scene / Camera / Renderer\n        const scene = new three__WEBPACK_IMPORTED_MODULE_2__.Scene();\n        const camera = new three__WEBPACK_IMPORTED_MODULE_2__.PerspectiveCamera(45, width / height, 0.1, 1000);\n        camera.position.set(0, 0.5, 2.5);\n        const renderer = new three__WEBPACK_IMPORTED_MODULE_2__.WebGLRenderer({\n            antialias: true,\n            alpha: true\n        });\n        renderer.setSize(width, height);\n        containerRef.current.appendChild(renderer.domElement);\n        // OrbitControls\n        const controls = new three_examples_jsm_controls_OrbitControls_js__WEBPACK_IMPORTED_MODULE_3__.OrbitControls(camera, renderer.domElement);\n        controls.enablePan = false;\n        controls.enableZoom = true;\n        controls.minDistance = 1.5;\n        controls.maxDistance = 3;\n        controls.minPolarAngle = Math.PI / 6;\n        controls.maxPolarAngle = Math.PI - Math.PI / 6;\n        controls.autoRotate = true;\n        controls.autoRotateSpeed = 0.2;\n        controls.enableDamping = true;\n        controls.dampingFactor = 0.05;\n        controls.rotateSpeed = 0.3;\n        // Lights\n        scene.add(new three__WEBPACK_IMPORTED_MODULE_2__.AmbientLight(0x555555));\n        const dirLight = new three__WEBPACK_IMPORTED_MODULE_2__.DirectionalLight(0xffffff, 1);\n        scene.add(dirLight);\n        // Earth with water mask texture for continent layout\n        const earthGeo = new three__WEBPACK_IMPORTED_MODULE_2__.SphereGeometry(1, 64, 64);\n        // Simply load and use the classic world map texture\n        new three__WEBPACK_IMPORTED_MODULE_2__.TextureLoader().load(\"https://upload.wikimedia.org/wikipedia/commons/0/09/BlankMap-World-v2.png\", (texture)=>{\n            const earthMat = new three__WEBPACK_IMPORTED_MODULE_2__.MeshStandardMaterial({\n                map: texture,\n                transparent: true,\n                metalness: 0.1,\n                roughness: 0.8\n            });\n            const earthMesh = new three__WEBPACK_IMPORTED_MODULE_2__.Mesh(earthGeo, earthMat);\n            earthMesh.rotation.y = Math.PI;\n            scene.add(earthMesh);\n        });\n        // Atmospheric glow effect\n        const atmosphereGeo = new three__WEBPACK_IMPORTED_MODULE_2__.SphereGeometry(1.05, 64, 64);\n        const atmosphereMat = new three__WEBPACK_IMPORTED_MODULE_2__.MeshBasicMaterial({\n            color: 0x06b6d4,\n            transparent: true,\n            opacity: 0.1,\n            side: three__WEBPACK_IMPORTED_MODULE_2__.BackSide\n        });\n        const atmosphere = new three__WEBPACK_IMPORTED_MODULE_2__.Mesh(atmosphereGeo, atmosphereMat);\n        scene.add(atmosphere);\n        atmosphereRef.current = atmosphere;\n        // Helper to convert lat/lng â†’ sphere coords\n        const latLngTo3D = (lat, lng, r)=>{\n            const Ï† = three__WEBPACK_IMPORTED_MODULE_2__.MathUtils.degToRad(lat); // latitude  (+N / -S)\n            const Î» = three__WEBPACK_IMPORTED_MODULE_2__.MathUtils.degToRad(lng); // longitude (+E / -W)\n            return {\n                x: r * Math.cos(Ï†) * Math.sin(Î»),\n                y: r * Math.sin(Ï†),\n                z: r * Math.cos(Ï†) * Math.cos(Î»)\n            };\n        };\n        // ðŸ”§ CHANGED â€” slightly smaller markers\n        const getSize = (s)=>s === \"large\" ? 0.06 : s === \"medium\" ? 0.045 : 0.03;\n        const getColor = (t)=>t === \"work\" ? \"#06b6d4\" : \"#8b5cf6\";\n        // Create one sphere-mesh per location and store in markerMeshes\n        markerMeshes.current = locations.map((loc)=>{\n            const pos = latLngTo3D(loc.lat, loc.lng, 1.02);\n            const color = new three__WEBPACK_IMPORTED_MODULE_2__.Color(getColor(loc.type));\n            const mesh = new three__WEBPACK_IMPORTED_MODULE_2__.Mesh(new three__WEBPACK_IMPORTED_MODULE_2__.SphereGeometry(getSize(loc.size), 16, 16), new three__WEBPACK_IMPORTED_MODULE_2__.MeshStandardMaterial({\n                color,\n                emissive: color,\n                emissiveIntensity: 0.2\n            }));\n            mesh.position.set(pos.x, pos.y, pos.z);\n            mesh.userData = {\n                locationId: loc.id\n            };\n            scene.add(mesh);\n            return mesh;\n        });\n        /* â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Mouse / ray-cast handlers â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ */ // ðŸ”§ CHANGED â€” update mouse vector only, leave casting to animate()\n        const onMouseMove = (e)=>{\n            const rect = renderer.domElement.getBoundingClientRect();\n            mouse.x = (e.clientX - rect.left) / rect.width * 2 - 1;\n            mouse.y = -((e.clientY - rect.top) / rect.height) * 2 + 1;\n        };\n        renderer.domElement.addEventListener(\"mousemove\", onMouseMove);\n        // When leaving the canvas, push the cursor far away so we never get hits\n        renderer.domElement.addEventListener(\"mouseleave\", ()=>{\n            mouse.set(-1000, -1000);\n            onLocationHover(null);\n            lastHoveredId = null;\n        });\n        /* â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Animation loop â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ */ const animate = ()=>{\n            var _hits_;\n            requestAnimationFrame(animate);\n            // Rotate earth via controls.autoRotate\n            controls.update();\n            // Update daylight direction\n            const now = new Date();\n            const hours = now.getUTCHours() + now.getUTCMinutes() / 60 + now.getUTCSeconds() / 3600;\n            const theta = hours / 24 * Math.PI * 2;\n            const dist = 100;\n            dirLight.position.set(dist * Math.cos(theta), 0, dist * Math.sin(theta));\n            // Animate particles\n            if (particlesRef.current) {\n                particlesRef.current.rotation.y += 0.001;\n                particlesRef.current.rotation.x += 0.0005;\n            }\n            // Pulse atmosphere\n            if (atmosphereRef.current) {\n                const time = Date.now() * 0.001;\n                const atmosphereMat = atmosphereRef.current.material;\n                atmosphereMat.opacity = 0.1 + Math.sin(time * 2) * 0.05;\n            }\n            /* ----- ðŸ”§ CHANGED â€” do ray-cast every frame ----- */ raycaster.setFromCamera(mouse, camera);\n            const hits = raycaster.intersectObjects(markerMeshes.current, false);\n            var _hits__object_userData_locationId;\n            const hoveredId = (_hits__object_userData_locationId = (_hits_ = hits[0]) === null || _hits_ === void 0 ? void 0 : _hits_.object.userData.locationId) !== null && _hits__object_userData_locationId !== void 0 ? _hits__object_userData_locationId : null;\n            if (hoveredId !== lastHoveredId) {\n                onLocationHover(hoveredId);\n                lastHoveredId = hoveredId;\n            }\n            markerMeshes.current.forEach((m)=>{\n                const mat = m.material;\n                mat.emissiveIntensity = m.userData.locationId === hoveredId ? 0.5 : 0.2;\n            });\n            renderer.render(scene, camera);\n        };\n        animate();\n        /* â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Resize & cleanup â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ */ const onResize = ()=>{\n            const w = containerRef.current.clientWidth;\n            const h = containerRef.current.clientHeight;\n            camera.aspect = w / h;\n            camera.updateProjectionMatrix();\n            renderer.setSize(w, h);\n        };\n        window.addEventListener(\"resize\", onResize);\n        return ()=>{\n            window.removeEventListener(\"resize\", onResize);\n            renderer.domElement.removeEventListener(\"mousemove\", onMouseMove);\n            containerRef.current.removeChild(renderer.domElement);\n            renderer.dispose();\n        };\n    }, [\n        locations,\n        onLocationHover\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: containerRef,\n        className: \"w-full h-full\"\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\Rashad\\\\Downloads\\\\Futuristic Portfolio Website\\\\components\\\\EarthGlobe.tsx\",\n        lineNumber: 230,\n        columnNumber: 10\n    }, this);\n}\n_s(EarthGlobe, \"neucQiWe/1qkF7IEmkD6CtVhF8o=\");\n_c = EarthGlobe;\nvar _c;\n$RefreshReg$(_c, \"EarthGlobe\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RUFBRS9CLFFBQVEsQ0FBQ0MsVUFBVSxLQUFLMkIsWUFBWSxNQUFNO1lBQ2hEO1lBRUFwRyxTQUFTeUcsTUFBTSxDQUFDL0csT0FBT0U7UUFDekI7UUFDQXdGO1FBRUEsNENBQTRDLEdBQzVDLE1BQU1zQixXQUFXO1lBQ2YsTUFBTUMsSUFBSS9ILGFBQWFNLE9BQU8sQ0FBRUssV0FBVztZQUMzQyxNQUFNcUgsSUFBSWhJLGFBQWFNLE9BQU8sQ0FBRU8sWUFBWTtZQUM1Q0csT0FBT2lILE1BQU0sR0FBR0YsSUFBSUM7WUFDcEJoSCxPQUFPa0gsc0JBQXNCO1lBQzdCOUcsU0FBU0ksT0FBTyxDQUFDdUcsR0FBR0M7UUFDdEI7UUFDQUcsT0FBTzVCLGdCQUFnQixDQUFDLFVBQVV1QjtRQUVsQyxPQUFPO1lBQ0xLLE9BQU9DLG1CQUFtQixDQUFDLFVBQVVOO1lBQ3JDMUcsU0FBU00sVUFBVSxDQUFDMEcsbUJBQW1CLENBQUMsYUFBYXJDO1lBQ3JEL0YsYUFBYU0sT0FBTyxDQUFFK0gsV0FBVyxDQUFDakgsU0FBU00sVUFBVTtZQUNyRE4sU0FBU2tILE9BQU87UUFDbEI7SUFDRixHQUFHO1FBQUN6STtRQUFXQztLQUFnQjtJQUUvQixxQkFBTyw4REFBQ3lJO1FBQUlDLEtBQUt4STtRQUFjeUksV0FBVTs7Ozs7O0FBQzNDO0dBN01nQjdJO0tBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvRWFydGhHbG9iZS50c3g/ZDg3MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVJlZiB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0ICogYXMgVEhSRUUgZnJvbSAndGhyZWUnO1xyXG5pbXBvcnQgeyBPcmJpdENvbnRyb2xzIH0gZnJvbSAndGhyZWUvZXhhbXBsZXMvanNtL2NvbnRyb2xzL09yYml0Q29udHJvbHMuanMnO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBMb2NhdGlvbiB7XHJcbiAgaWQ6IHN0cmluZztcclxuICBuYW1lOiBzdHJpbmc7XHJcbiAgY2l0eTogc3RyaW5nO1xyXG4gIGNvdW50cnk6IHN0cmluZztcclxuICBsYXQ6IG51bWJlcjtcclxuICBsbmc6IG51bWJlcjtcclxuICBjb21wYW55OiBzdHJpbmc7XHJcbiAgcm9sZTogc3RyaW5nO1xyXG4gIHBlcmlvZDogc3RyaW5nO1xyXG4gIGFjaGlldmVtZW50czogc3RyaW5nW107XHJcbiAgdHlwZTogJ3dvcmsnIHwgJ3Jlc2lkZW5jZSc7XHJcbiAgc2l6ZTogJ3NtYWxsJyB8ICdtZWRpdW0nIHwgJ2xhcmdlJztcclxufVxyXG5cclxuaW50ZXJmYWNlIEVhcnRoR2xvYmVQcm9wcyB7XHJcbiAgbG9jYXRpb25zOiBMb2NhdGlvbltdO1xyXG4gIG9uTG9jYXRpb25Ib3ZlcjogKGlkOiBzdHJpbmcgfCBudWxsKSA9PiB2b2lkO1xyXG4gIGhvdmVyZWRMb2NhdGlvbjogc3RyaW5nIHwgbnVsbDtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIEVhcnRoR2xvYmUoe1xyXG4gIGxvY2F0aW9ucyxcclxuICBvbkxvY2F0aW9uSG92ZXIsXHJcbiAgaG92ZXJlZExvY2F0aW9uLFxyXG59OiBFYXJ0aEdsb2JlUHJvcHMpIHtcclxuICBjb25zdCBjb250YWluZXJSZWYgPSB1c2VSZWY8SFRNTERpdkVsZW1lbnQ+KG51bGwpO1xyXG5cclxuICAvLyBIb2xkIG9udG8gb3VyIG1hcmtlciBtZXNoZXMgc28gd2UgY2FuIHJheS1jYXN0IG9ubHkgdGhlbTpcclxuICBjb25zdCBtYXJrZXJNZXNoZXMgPSB1c2VSZWY8VEhSRUUuTWVzaFtdPihbXSk7XHJcbiAgY29uc3QgcGFydGljbGVzUmVmID0gdXNlUmVmPFRIUkVFLlBvaW50cyB8IG51bGw+KG51bGwpO1xyXG4gIGNvbnN0IGF0bW9zcGhlcmVSZWYgPSB1c2VSZWY8VEhSRUUuTWVzaCB8IG51bGw+KG51bGwpO1xyXG5cclxuICAvLyDwn5SnIENIQU5HRUQg4oCUIGtlZXAgdGhlc2Ugb3V0c2lkZSBhbmltYXRlKCkgc28gdGhlIHJheSB1cGRhdGVzIGV2ZXJ5IGZyYW1lXHJcbiAgY29uc3QgcmF5Y2FzdGVyID0gdXNlUmVmKG5ldyBUSFJFRS5SYXljYXN0ZXIoKSkuY3VycmVudDtcclxuICBjb25zdCBtb3VzZSA9IHVzZVJlZihuZXcgVEhSRUUuVmVjdG9yMigtMTAwMCwgLTEwMDApKS5jdXJyZW50OyAvLyBzdGFydCBvZmYtY2FudmFzXHJcbiAgbGV0IGxhc3RIb3ZlcmVkSWQ6IHN0cmluZyB8IG51bGwgPSBudWxsOyAgICAgICAgICAgICAgICAgICAgICAgLy8gdHJhY2tzIHN0YXRlIGFjcm9zcyBmcmFtZXNcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGlmICghY29udGFpbmVyUmVmLmN1cnJlbnQpIHJldHVybjtcclxuICAgIGNvbnN0IHdpZHRoID0gY29udGFpbmVyUmVmLmN1cnJlbnQuY2xpZW50V2lkdGg7XHJcbiAgICBjb25zdCBoZWlnaHQgPSBjb250YWluZXJSZWYuY3VycmVudC5jbGllbnRIZWlnaHQ7XHJcblxyXG4gICAgLy8gU2NlbmUgLyBDYW1lcmEgLyBSZW5kZXJlclxyXG4gICAgY29uc3Qgc2NlbmUgPSBuZXcgVEhSRUUuU2NlbmUoKTtcclxuICAgIGNvbnN0IGNhbWVyYSA9IG5ldyBUSFJFRS5QZXJzcGVjdGl2ZUNhbWVyYSg0NSwgd2lkdGggLyBoZWlnaHQsIDAuMSwgMTAwMCk7XHJcbiAgICBjYW1lcmEucG9zaXRpb24uc2V0KDAsIDAuNSwgMi41KTtcclxuXHJcbiAgICBjb25zdCByZW5kZXJlciA9IG5ldyBUSFJFRS5XZWJHTFJlbmRlcmVyKHsgYW50aWFsaWFzOiB0cnVlLCBhbHBoYTogdHJ1ZSB9KTtcclxuICAgIHJlbmRlcmVyLnNldFNpemUod2lkdGgsIGhlaWdodCk7XHJcbiAgICBjb250YWluZXJSZWYuY3VycmVudC5hcHBlbmRDaGlsZChyZW5kZXJlci5kb21FbGVtZW50KTtcclxuXHJcbiAgICAvLyBPcmJpdENvbnRyb2xzXHJcbiAgICBjb25zdCBjb250cm9scyA9IG5ldyBPcmJpdENvbnRyb2xzKGNhbWVyYSwgcmVuZGVyZXIuZG9tRWxlbWVudCk7XHJcbiAgICBjb250cm9scy5lbmFibGVQYW4gPSBmYWxzZTtcclxuICAgIGNvbnRyb2xzLmVuYWJsZVpvb20gPSB0cnVlO1xyXG4gICAgY29udHJvbHMubWluRGlzdGFuY2UgPSAxLjU7XHJcbiAgICBjb250cm9scy5tYXhEaXN0YW5jZSA9IDM7XHJcbiAgICBjb250cm9scy5taW5Qb2xhckFuZ2xlID0gTWF0aC5QSSAvIDY7XHJcbiAgICBjb250cm9scy5tYXhQb2xhckFuZ2xlID0gTWF0aC5QSSAtIE1hdGguUEkgLyA2O1xyXG4gICAgY29udHJvbHMuYXV0b1JvdGF0ZSA9IHRydWU7XHJcbiAgICBjb250cm9scy5hdXRvUm90YXRlU3BlZWQgPSAwLjI7XHJcbiAgICBjb250cm9scy5lbmFibGVEYW1waW5nID0gdHJ1ZTtcclxuICAgIGNvbnRyb2xzLmRhbXBpbmdGYWN0b3IgPSAwLjA1O1xyXG4gICAgY29udHJvbHMucm90YXRlU3BlZWQgPSAwLjM7XHJcblxyXG4gICAgLy8gTGlnaHRzXHJcbiAgICBzY2VuZS5hZGQobmV3IFRIUkVFLkFtYmllbnRMaWdodCgweDU1NTU1NSkpO1xyXG4gICAgY29uc3QgZGlyTGlnaHQgPSBuZXcgVEhSRUUuRGlyZWN0aW9uYWxMaWdodCgweGZmZmZmZiwgMSk7XHJcbiAgICBzY2VuZS5hZGQoZGlyTGlnaHQpO1xyXG5cclxuICAgIC8vIEVhcnRoIHdpdGggd2F0ZXIgbWFzayB0ZXh0dXJlIGZvciBjb250aW5lbnQgbGF5b3V0XHJcbiAgICBjb25zdCBlYXJ0aEdlbyA9IG5ldyBUSFJFRS5TcGhlcmVHZW9tZXRyeSgxLCA2NCwgNjQpO1xyXG5cclxuICAgIC8vIFNpbXBseSBsb2FkIGFuZCB1c2UgdGhlIGNsYXNzaWMgd29ybGQgbWFwIHRleHR1cmVcclxuICAgIG5ldyBUSFJFRS5UZXh0dXJlTG9hZGVyKCkubG9hZChcclxuICAgICAgJ2h0dHBzOi8vdXBsb2FkLndpa2ltZWRpYS5vcmcvd2lraXBlZGlhL2NvbW1vbnMvMC8wOS9CbGFua01hcC1Xb3JsZC12Mi5wbmcnLFxyXG4gICAgICAodGV4dHVyZSkgPT4ge1xyXG4gICAgICAgIGNvbnN0IGVhcnRoTWF0ID0gbmV3IFRIUkVFLk1lc2hTdGFuZGFyZE1hdGVyaWFsKHtcclxuICAgICAgICAgIG1hcDogdGV4dHVyZSxcclxuICAgICAgICAgIHRyYW5zcGFyZW50OiB0cnVlLFxyXG4gICAgICAgICAgbWV0YWxuZXNzOiAwLjEsXHJcbiAgICAgICAgICByb3VnaG5lc3M6IDAuOCxcclxuICAgICAgICB9KTtcclxuICAgICAgICBjb25zdCBlYXJ0aE1lc2ggPSBuZXcgVEhSRUUuTWVzaChlYXJ0aEdlbywgZWFydGhNYXQpO1xyXG4gICAgICAgIGVhcnRoTWVzaC5yb3RhdGlvbi55ID0gTWF0aC5QSTtcclxuICAgICAgICBzY2VuZS5hZGQoZWFydGhNZXNoKTtcclxuICAgICAgfSxcclxuICAgICk7XHJcblxyXG4gICAgLy8gQXRtb3NwaGVyaWMgZ2xvdyBlZmZlY3RcclxuICAgIGNvbnN0IGF0bW9zcGhlcmVHZW8gPSBuZXcgVEhSRUUuU3BoZXJlR2VvbWV0cnkoMS4wNSwgNjQsIDY0KTtcclxuICAgIGNvbnN0IGF0bW9zcGhlcmVNYXQgPSBuZXcgVEhSRUUuTWVzaEJhc2ljTWF0ZXJpYWwoe1xyXG4gICAgICBjb2xvcjogMHgwNmI2ZDQsXHJcbiAgICAgIHRyYW5zcGFyZW50OiB0cnVlLFxyXG4gICAgICBvcGFjaXR5OiAwLjEsXHJcbiAgICAgIHNpZGU6IFRIUkVFLkJhY2tTaWRlLFxyXG4gICAgfSk7XHJcbiAgICBjb25zdCBhdG1vc3BoZXJlID0gbmV3IFRIUkVFLk1lc2goYXRtb3NwaGVyZUdlbywgYXRtb3NwaGVyZU1hdCk7XHJcbiAgICBzY2VuZS5hZGQoYXRtb3NwaGVyZSk7XHJcbiAgICBhdG1vc3BoZXJlUmVmLmN1cnJlbnQgPSBhdG1vc3BoZXJlO1xyXG5cclxuICAgIFxyXG4gICAgLy8gSGVscGVyIHRvIGNvbnZlcnQgbGF0L2xuZyDihpIgc3BoZXJlIGNvb3Jkc1xyXG4gICAgY29uc3QgbGF0TG5nVG8zRCA9IChsYXQ6IG51bWJlciwgbG5nOiBudW1iZXIsIHI6IG51bWJlcikgPT4ge1xyXG4gICAgICAgIGNvbnN0IM+GID0gVEhSRUUuTWF0aFV0aWxzLmRlZ1RvUmFkKGxhdCk7ICAgLy8gbGF0aXR1ZGUgICgrTiAvIC1TKVxyXG4gICAgICAgIGNvbnN0IM67ID0gVEhSRUUuTWF0aFV0aWxzLmRlZ1RvUmFkKGxuZyk7ICAgLy8gbG9uZ2l0dWRlICgrRSAvIC1XKVxyXG4gIFxyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICB4OiByICogTWF0aC5jb3Moz4YpICogTWF0aC5zaW4ozrspLFxyXG4gICAgICAgICAgeTogciAqIE1hdGguc2luKM+GKSxcclxuICAgICAgICAgIHo6IHIgKiBNYXRoLmNvcyjPhikgKiBNYXRoLmNvcyjOuyksXHJcbiAgICAgICAgfTtcclxuICAgICAgfTtcclxuXHJcbiAgICAvLyDwn5SnIENIQU5HRUQg4oCUIHNsaWdodGx5IHNtYWxsZXIgbWFya2Vyc1xyXG4gICAgY29uc3QgZ2V0U2l6ZSA9IChzOiAnc21hbGwnIHwgJ21lZGl1bScgfCAnbGFyZ2UnKSA9PlxyXG4gICAgICBzID09PSAnbGFyZ2UnID8gMC4wNiA6IHMgPT09ICdtZWRpdW0nID8gMC4wNDUgOiAwLjAzO1xyXG4gICAgY29uc3QgZ2V0Q29sb3IgPSAodDogJ3dvcmsnIHwgJ3Jlc2lkZW5jZScpID0+XHJcbiAgICAgIHQgPT09ICd3b3JrJyA/ICcjMDZiNmQ0JyA6ICcjOGI1Y2Y2JztcclxuXHJcbiAgICAvLyBDcmVhdGUgb25lIHNwaGVyZS1tZXNoIHBlciBsb2NhdGlvbiBhbmQgc3RvcmUgaW4gbWFya2VyTWVzaGVzXHJcbiAgICBtYXJrZXJNZXNoZXMuY3VycmVudCA9IGxvY2F0aW9ucy5tYXAoKGxvYykgPT4ge1xyXG4gICAgICBjb25zdCBwb3MgPSBsYXRMbmdUbzNEKGxvYy5sYXQsIGxvYy5sbmcsIDEuMDIpO1xyXG4gICAgICBjb25zdCBjb2xvciA9IG5ldyBUSFJFRS5Db2xvcihnZXRDb2xvcihsb2MudHlwZSkpO1xyXG4gICAgICBjb25zdCBtZXNoID0gbmV3IFRIUkVFLk1lc2goXHJcbiAgICAgICAgbmV3IFRIUkVFLlNwaGVyZUdlb21ldHJ5KGdldFNpemUobG9jLnNpemUpLCAxNiwgMTYpLFxyXG4gICAgICAgIG5ldyBUSFJFRS5NZXNoU3RhbmRhcmRNYXRlcmlhbCh7XHJcbiAgICAgICAgICBjb2xvcixcclxuICAgICAgICAgIGVtaXNzaXZlOiBjb2xvcixcclxuICAgICAgICAgIGVtaXNzaXZlSW50ZW5zaXR5OiAwLjIsXHJcbiAgICAgICAgfSksXHJcbiAgICAgICk7XHJcbiAgICAgIG1lc2gucG9zaXRpb24uc2V0KHBvcy54LCBwb3MueSwgcG9zLnopO1xyXG4gICAgICBtZXNoLnVzZXJEYXRhID0geyBsb2NhdGlvbklkOiBsb2MuaWQgfTtcclxuICAgICAgc2NlbmUuYWRkKG1lc2gpO1xyXG4gICAgICByZXR1cm4gbWVzaDtcclxuICAgIH0pO1xyXG5cclxuICAgIC8qIOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgCBNb3VzZSAvIHJheS1jYXN0IGhhbmRsZXJzIOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgCAqL1xyXG5cclxuICAgIC8vIPCflKcgQ0hBTkdFRCDigJQgdXBkYXRlIG1vdXNlIHZlY3RvciBvbmx5LCBsZWF2ZSBjYXN0aW5nIHRvIGFuaW1hdGUoKVxyXG4gICAgY29uc3Qgb25Nb3VzZU1vdmUgPSAoZTogTW91c2VFdmVudCkgPT4ge1xyXG4gICAgICBjb25zdCByZWN0ID0gcmVuZGVyZXIuZG9tRWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuICAgICAgbW91c2UueCA9ICgoZS5jbGllbnRYIC0gcmVjdC5sZWZ0KSAvIHJlY3Qud2lkdGgpICogMiAtIDE7XHJcbiAgICAgIG1vdXNlLnkgPSAtKChlLmNsaWVudFkgLSByZWN0LnRvcCkgLyByZWN0LmhlaWdodCkgKiAyICsgMTtcclxuICAgIH07XHJcbiAgICByZW5kZXJlci5kb21FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIG9uTW91c2VNb3ZlKTtcclxuXHJcbiAgICAvLyBXaGVuIGxlYXZpbmcgdGhlIGNhbnZhcywgcHVzaCB0aGUgY3Vyc29yIGZhciBhd2F5IHNvIHdlIG5ldmVyIGdldCBoaXRzXHJcbiAgICByZW5kZXJlci5kb21FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbGVhdmUnLCAoKSA9PiB7XHJcbiAgICAgIG1vdXNlLnNldCgtMTAwMCwgLTEwMDApO1xyXG4gICAgICBvbkxvY2F0aW9uSG92ZXIobnVsbCk7XHJcbiAgICAgIGxhc3RIb3ZlcmVkSWQgPSBudWxsO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLyog4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSAIEFuaW1hdGlvbiBsb29wIOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgCAqL1xyXG4gICAgY29uc3QgYW5pbWF0ZSA9ICgpID0+IHtcclxuICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGFuaW1hdGUpO1xyXG5cclxuICAgICAgLy8gUm90YXRlIGVhcnRoIHZpYSBjb250cm9scy5hdXRvUm90YXRlXHJcbiAgICAgIGNvbnRyb2xzLnVwZGF0ZSgpO1xyXG5cclxuICAgICAgLy8gVXBkYXRlIGRheWxpZ2h0IGRpcmVjdGlvblxyXG4gICAgICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpO1xyXG4gICAgICBjb25zdCBob3VycyA9XHJcbiAgICAgICAgbm93LmdldFVUQ0hvdXJzKCkgK1xyXG4gICAgICAgIG5vdy5nZXRVVENNaW51dGVzKCkgLyA2MCArXHJcbiAgICAgICAgbm93LmdldFVUQ1NlY29uZHMoKSAvIDM2MDA7XHJcbiAgICAgIGNvbnN0IHRoZXRhID0gKGhvdXJzIC8gMjQpICogTWF0aC5QSSAqIDI7XHJcbiAgICAgIGNvbnN0IGRpc3QgPSAxMDA7XHJcbiAgICAgIGRpckxpZ2h0LnBvc2l0aW9uLnNldChkaXN0ICogTWF0aC5jb3ModGhldGEpLCAwLCBkaXN0ICogTWF0aC5zaW4odGhldGEpKTtcclxuXHJcbiAgICAgIC8vIEFuaW1hdGUgcGFydGljbGVzXHJcbiAgICAgIGlmIChwYXJ0aWNsZXNSZWYuY3VycmVudCkge1xyXG4gICAgICAgIHBhcnRpY2xlc1JlZi5jdXJyZW50LnJvdGF0aW9uLnkgKz0gMC4wMDE7XHJcbiAgICAgICAgcGFydGljbGVzUmVmLmN1cnJlbnQucm90YXRpb24ueCArPSAwLjAwMDU7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIFB1bHNlIGF0bW9zcGhlcmVcclxuICAgICAgaWYgKGF0bW9zcGhlcmVSZWYuY3VycmVudCkge1xyXG4gICAgICAgIGNvbnN0IHRpbWUgPSBEYXRlLm5vdygpICogMC4wMDE7XHJcbiAgICAgICAgY29uc3QgYXRtb3NwaGVyZU1hdCA9IGF0bW9zcGhlcmVSZWYuY3VycmVudFxyXG4gICAgICAgICAgLm1hdGVyaWFsIGFzIFRIUkVFLk1lc2hCYXNpY01hdGVyaWFsO1xyXG4gICAgICAgIGF0bW9zcGhlcmVNYXQub3BhY2l0eSA9IDAuMSArIE1hdGguc2luKHRpbWUgKiAyKSAqIDAuMDU7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8qIC0tLS0tIPCflKcgQ0hBTkdFRCDigJQgZG8gcmF5LWNhc3QgZXZlcnkgZnJhbWUgLS0tLS0gKi9cclxuICAgICAgcmF5Y2FzdGVyLnNldEZyb21DYW1lcmEobW91c2UsIGNhbWVyYSk7XHJcbiAgICAgIGNvbnN0IGhpdHMgPSByYXljYXN0ZXIuaW50ZXJzZWN0T2JqZWN0cyhtYXJrZXJNZXNoZXMuY3VycmVudCwgZmFsc2UpO1xyXG4gICAgICBjb25zdCBob3ZlcmVkSWQgPSBoaXRzWzBdPy5vYmplY3QudXNlckRhdGEubG9jYXRpb25JZCA/PyBudWxsO1xyXG5cclxuICAgICAgaWYgKGhvdmVyZWRJZCAhPT0gbGFzdEhvdmVyZWRJZCkge1xyXG4gICAgICAgIG9uTG9jYXRpb25Ib3Zlcihob3ZlcmVkSWQpO1xyXG4gICAgICAgIGxhc3RIb3ZlcmVkSWQgPSBob3ZlcmVkSWQ7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIG1hcmtlck1lc2hlcy5jdXJyZW50LmZvckVhY2goKG0pID0+IHtcclxuICAgICAgICBjb25zdCBtYXQgPSBtLm1hdGVyaWFsIGFzIFRIUkVFLk1lc2hTdGFuZGFyZE1hdGVyaWFsO1xyXG4gICAgICAgIG1hdC5lbWlzc2l2ZUludGVuc2l0eSA9XHJcbiAgICAgICAgICBtLnVzZXJEYXRhLmxvY2F0aW9uSWQgPT09IGhvdmVyZWRJZCA/IDAuNSA6IDAuMjtcclxuICAgICAgfSk7XHJcblxyXG4gICAgICByZW5kZXJlci5yZW5kZXIoc2NlbmUsIGNhbWVyYSk7XHJcbiAgICB9O1xyXG4gICAgYW5pbWF0ZSgpO1xyXG5cclxuICAgIC8qIOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgCBSZXNpemUgJiBjbGVhbnVwIOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgCAqL1xyXG4gICAgY29uc3Qgb25SZXNpemUgPSAoKSA9PiB7XHJcbiAgICAgIGNvbnN0IHcgPSBjb250YWluZXJSZWYuY3VycmVudCEuY2xpZW50V2lkdGg7XHJcbiAgICAgIGNvbnN0IGggPSBjb250YWluZXJSZWYuY3VycmVudCEuY2xpZW50SGVpZ2h0O1xyXG4gICAgICBjYW1lcmEuYXNwZWN0ID0gdyAvIGg7XHJcbiAgICAgIGNhbWVyYS51cGRhdGVQcm9qZWN0aW9uTWF0cml4KCk7XHJcbiAgICAgIHJlbmRlcmVyLnNldFNpemUodywgaCk7XHJcbiAgICB9O1xyXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIG9uUmVzaXplKTtcclxuXHJcbiAgICByZXR1cm4gKCkgPT4ge1xyXG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJywgb25SZXNpemUpO1xyXG4gICAgICByZW5kZXJlci5kb21FbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIG9uTW91c2VNb3ZlKTtcclxuICAgICAgY29udGFpbmVyUmVmLmN1cnJlbnQhLnJlbW92ZUNoaWxkKHJlbmRlcmVyLmRvbUVsZW1lbnQpO1xyXG4gICAgICByZW5kZXJlci5kaXNwb3NlKCk7XHJcbiAgICB9O1xyXG4gIH0sIFtsb2NhdGlvbnMsIG9uTG9jYXRpb25Ib3Zlcl0pO1xyXG5cclxuICByZXR1cm4gPGRpdiByZWY9e2NvbnRhaW5lclJlZn0gY2xhc3NOYW1lPVwidy1mdWxsIGgtZnVsbFwiIC8+O1xyXG59XHJcbiJdLCJuYW1lcyI6WyJ1c2VFZmZlY3QiLCJ1c2VSZWYiLCJUSFJFRSIsIk9yYml0Q29udHJvbHMiLCJFYXJ0aEdsb2JlIiwibG9jYXRpb25zIiwib25Mb2NhdGlvbkhvdmVyIiwiaG92ZXJlZExvY2F0aW9uIiwiY29udGFpbmVyUmVmIiwibWFya2VyTWVzaGVzIiwicGFydGljbGVzUmVmIiwiYXRtb3NwaGVyZVJlZiIsInJheWNhc3RlciIsIlJheWNhc3RlciIsImN1cnJlbnQiLCJtb3VzZSIsIlZlY3RvcjIiLCJsYXN0SG92ZXJlZElkIiwid2lkdGgiLCJjbGllbnRXaWR0aCIsImhlaWdodCIsImNsaWVudEhlaWdodCIsInNjZW5lIiwiU2NlbmUiLCJjYW1lcmEiLCJQZXJzcGVjdGl2ZUNhbWVyYSIsInBvc2l0aW9uIiwic2V0IiwicmVuZGVyZXIiLCJXZWJHTFJlbmRlcmVyIiwiYW50aWFsaWFzIiwiYWxwaGEiLCJzZXRTaXplIiwiYXBwZW5kQ2hpbGQiLCJkb21FbGVtZW50IiwiY29udHJvbHMiLCJlbmFibGVQYW4iLCJlbmFibGVab29tIiwibWluRGlzdGFuY2UiLCJtYXhEaXN0YW5jZSIsIm1pblBvbGFyQW5nbGUiLCJNYXRoIiwiUEkiLCJtYXhQb2xhckFuZ2xlIiwiYXV0b1JvdGF0ZSIsImF1dG9Sb3RhdGVTcGVlZCIsImVuYWJsZURhbXBpbmciLCJkYW1waW5nRmFjdG9yIiwicm90YXRlU3BlZWQiLCJhZGQiLCJBbWJpZW50TGlnaHQiLCJkaXJMaWdodCIsIkRpcmVjdGlvbmFsTGlnaHQiLCJlYXJ0aEdlbyIsIlNwaGVyZUdlb21ldHJ5IiwiVGV4dHVyZUxvYWRlciIsImxvYWQiLCJ0ZXh0dXJlIiwiZWFydGhNYXQiLCJNZXNoU3RhbmRhcmRNYXRlcmlhbCIsIm1hcCIsInRyYW5zcGFyZW50IiwibWV0YWxuZXNzIiwicm91Z2huZXNzIiwiZWFydGhNZXNoIiwiTWVzaCIsInJvdGF0aW9uIiwieSIsImF0bW9zcGhlcmVHZW8iLCJhdG1vc3BoZXJlTWF0IiwiTWVzaEJhc2ljTWF0ZXJpYWwiLCJjb2xvciIsIm9wYWNpdHkiLCJzaWRlIiwiQmFja1NpZGUiLCJhdG1vc3BoZXJlIiwibGF0TG5nVG8zRCIsImxhdCIsImxuZyIsInIiLCLPhiIsIk1hdGhVdGlscyIsImRlZ1RvUmFkIiwizrsiLCJ4IiwiY29zIiwic2luIiwieiIsImdldFNpemUiLCJzIiwiZ2V0Q29sb3IiLCJ0IiwibG9jIiwicG9zIiwiQ29sb3IiLCJ0eXBlIiwibWVzaCIsInNpemUiLCJlbWlzc2l2ZSIsImVtaXNzaXZlSW50ZW5zaXR5IiwidXNlckRhdGEiLCJsb2NhdGlvbklkIiwiaWQiLCJvbk1vdXNlTW92ZSIsImUiLCJyZWN0IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwiY2xpZW50WCIsImxlZnQiLCJjbGllbnRZIiwidG9wIiwiYWRkRXZlbnRMaXN0ZW5lciIsImFuaW1hdGUiLCJoaXRzIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwidXBkYXRlIiwibm93IiwiRGF0ZSIsImhvdXJzIiwiZ2V0VVRDSG91cnMiLCJnZXRVVENNaW51dGVzIiwiZ2V0VVRDU2Vjb25kcyIsInRoZXRhIiwiZGlzdCIsInRpbWUiLCJtYXRlcmlhbCIsInNldEZyb21DYW1lcmEiLCJpbnRlcnNlY3RPYmplY3RzIiwiaG92ZXJlZElkIiwib2JqZWN0IiwiZm9yRWFjaCIsIm0iLCJtYXQiLCJyZW5kZXIiLCJvblJlc2l6ZSIsInciLCJoIiwiYXNwZWN0IiwidXBkYXRlUHJvamVjdGlvbk1hdHJpeCIsIndpbmRvdyIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJyZW1vdmVDaGlsZCIsImRpc3Bvc2UiLCJkaXYiLCJyZWYiLCJjbGFzc05hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/EarthGlobe.tsx\n"));

/***/ })

});